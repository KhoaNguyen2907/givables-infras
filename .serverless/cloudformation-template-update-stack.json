{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "GivablesTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "givables-db-dev",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "PK",
            "AttributeType": "S"
          },
          {
            "AttributeName": "SK",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "PK",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "SK",
            "KeyType": "RANGE"
          }
        ]
      }
    },
    "GivablesUserPool": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "UserPoolName": "givables-user-pool-dev",
        "UsernameAttributes": [
          "email"
        ],
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 8,
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireUppercase": true
          }
        },
        "AutoVerifiedAttributes": [
          "email"
        ],
        "EmailVerificationMessage": "Your verification code is {####}",
        "EmailVerificationSubject": "Givables: Verify your email",
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_email",
              "Priority": 1
            }
          ]
        }
      }
    },
    "GivablesUserPoolDomain": {
      "Type": "AWS::Cognito::UserPoolDomain",
      "Properties": {
        "Domain": "givables-dev",
        "UserPoolId": {
          "Ref": "GivablesUserPool"
        }
      }
    },
    "GivablesUserPoolClient": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": {
          "Ref": "GivablesUserPool"
        },
        "ClientName": "givables-client-dev",
        "GenerateSecret": false,
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ],
        "EnableTokenRevocation": true,
        "PreventUserExistenceErrors": "ENABLED",
        "CallbackURLs": [
          "http://localhost:3000"
        ],
        "AllowedOAuthFlows": [
          "implicit"
        ],
        "AllowedOAuthScopes": [
          "email",
          "openid",
          "profile"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "SupportedIdentityProviders": [
          "COGNITO"
        ]
      }
    },
    "AdminGroup": {
      "Type": "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "GroupName": "admin",
        "Description": "Administrator group",
        "UserPoolId": {
          "Ref": "GivablesUserPool"
        },
        "Precedence": 0
      }
    },
    "GivablesTableNameParameter": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Name": "/givables/dev/table-name",
        "Type": "String",
        "Value": {
          "Ref": "GivablesTable"
        }
      }
    },
    "GivablesTableArnParameter": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Name": "/givables/dev/table-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "GivablesTable",
            "Arn"
          ]
        }
      }
    },
    "GivablesUserPoolIdParameter": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Name": "/givables/dev/user-pool-id",
        "Type": "String",
        "Value": {
          "Ref": "GivablesUserPool"
        }
      }
    },
    "GivablesUserPoolArnParameter": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Name": "/givables/dev/user-pool-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "GivablesUserPool",
            "Arn"
          ]
        }
      }
    },
    "GivablesUserPoolClientIdParameter": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Name": "/givables/dev/user-pool-client-id",
        "Type": "String",
        "Value": {
          "Ref": "GivablesUserPoolClient"
        }
      }
    },
    "UserGroup": {
      "Type": "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "GroupName": "user",
        "Description": "Regular user group",
        "UserPoolId": {
          "Ref": "GivablesUserPool"
        },
        "Precedence": 1
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-givables-service-dev-ServerlessDeploymentBucketName"
      }
    },
    "TableName": {
      "Value": {
        "Ref": "GivablesTable"
      }
    },
    "UserPoolId": {
      "Value": {
        "Ref": "GivablesUserPool"
      }
    },
    "UserPoolClientId": {
      "Value": {
        "Ref": "GivablesUserPoolClient"
      }
    }
  }
}